name: Frontend Continuous Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: "18.14"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend
      - name: Run lint
        run: npm run lint
        working-directory: ./frontend

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: "18.14"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend
      - name: Run tests
        run: CI=true npm test
        working-directory: ./frontend

  build-and-push:
    runs-on: ubuntu-latest
    needs: [lint, test]
    env:
      REACT_APP_MOVIE_API_URL: ${{ vars.REACT_APP_MOVIE_API_URL }}
      ECR_REPOSITORY: frontend
      FRONTEND_ECR_REPO_URL: ${{ vars.FRONTEND_ECR_REPO_URL }}
    outputs:
      ecr_registry: ${{ steps.login-ecr.outputs.registry }}
      image_tag: ${{ steps.vars.outputs.image_tag }}
      repo_url: ${{ steps.set-repo.outputs.repo_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set image tag
        id: vars
        run: echo "image_tag=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"

      - name: Resolve repository URL
        id: set-repo
        run: |
          if [ -n "${FRONTEND_ECR_REPO_URL}" ]; then
            echo "repo_url=${FRONTEND_ECR_REPO_URL}" >> "$GITHUB_OUTPUT"
          else
            echo "repo_url=${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY}" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build, tag, and push image to Amazon ECR
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: ${{ steps.set-repo.outputs.repo_url }}:${{ steps.vars.outputs.image_tag }}
          build-args: |
            REACT_APP_MOVIE_API_URL=${{ env.REACT_APP_MOVIE_API_URL }}
          cache-from: type=registry,ref=${{ steps.set-repo.outputs.repo_url }}:cache
          cache-to: type=registry,ref=${{ steps.set-repo.outputs.repo_url }}:cache,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    env:
      ECR_REPOSITORY: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Kubeconfig
        run: aws eks update-kubeconfig --name cluster --region us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Resolve repository URL
        id: set-repo
        run: |
          if [ -n "${{ vars.FRONTEND_ECR_REPO_URL }}" ]; then
            echo "repo_url=${{ vars.FRONTEND_ECR_REPO_URL }}" >> "$GITHUB_OUTPUT"
          else
            echo "repo_url=${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY}" >> "$GITHUB_OUTPUT"
          fi

      - name: Install kustomize
        run: |
          curl -sSfL https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh | bash -s -- 4.5.7
          sudo mv kustomize /usr/local/bin/

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      - name: Deploy to EKS
        run: |
          kustomize edit set image placeholder=$IMAGE_REPO_URL:$IMAGE_TAG
          kustomize build | kubectl apply -f -
        working-directory: ./frontend/k8s
        env:
          IMAGE_REPO_URL: ${{ steps.set-repo.outputs.repo_url }}
          IMAGE_TAG: ${{ needs.build-and-push.outputs.image_tag }}
